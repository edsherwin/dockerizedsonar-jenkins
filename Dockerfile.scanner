FROM openjdk:17-jdk-slim

# Update the package list and install necessary dependencies
RUN apt-get update && apt-get install -y \
    curl \
    grep \
    sed \
    unzip \
    bash \
    npm \
    nodejs

# Install the latest LTS Node.js version from NodeSource setup script
RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs

# Verify Node.js version to ensure the LTS version is installed
RUN node -v

# Set timezone to CST
ENV TZ=America/Chicago
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ARG SONAR_SCANNER_VERSION="4.0.0.1744"
ENV SONAR_SCANNER_HOME=/usr/local/bin/sonar-scanner
ENV PATH=$PATH:$SONAR_SCANNER_HOME/bin

WORKDIR /usr/src

RUN curl --insecure -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.0.0.1744-linux.zip && \
	unzip sonarscanner.zip && \
	rm sonarscanner.zip && \
	mv sonar-scanner-4.0.0.1744-linux /usr/lib/sonar-scanner && \
	ln -s /usr/lib/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

ENV SONAR_RUNNER_HOME=/usr/lib/sonar-scanner

COPY sonar-runner.properties /usr/lib/sonar-scanner/conf/sonar-scanner.properties
RUN which node

#   ensure Sonar uses the provided Java for musl instead of a borked glibc one
RUN sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' /usr/lib/sonar-scanner/bin/sonar-scanner

# Separating ENTRYPOINT and CMD operations allows for core execution variables to
# be easily overridden by passing them in as part of the `docker run` command.
# This allows the default /usr/src base dir to be overridden by users as-needed.
ENTRYPOINT ["sonar-scanner"] 
CMD ["-Dsonar.projectBaseDir=.", "sonar-scanner"]